name: Publish WebAssembly App

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

jobs:

  publish-app:
    name: Publish WebAssembly App
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      NUGET_CERT_REVOCATION_MODE: offline
      DOTNET_NUGET_SIGNATURE_VERIFICATION: false
    steps:

      - name: Read Metadata
        run: |
          echo "Version: ${{ inputs.version }}"

      - name: Deploy WebAssembly to Staging
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          aws s3 rm --only-show-errors --recursive s3://${{ secrets.S3_APP_STAGING }}
          aws s3 cp --only-show-errors --recursive s3://${{ secrets.S3_APP_BASE }}/v${{ inputs.version }} s3://${{ secrets.S3_APP_STAGING }}
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CF_APP_STAGING }} --paths "/*"

      - name: Deploy WebAssembly to Production
        if: ${{ github.repository == 'StudioLE/Lineweights' && github.ref == 'refs/heads/main' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          aws s3 rm --only-show-errors --recursive s3://${{ secrets.S3_APP_PRODUCTION }}
          aws s3 cp --only-show-errors --recursive s3://${{ secrets.S3_APP_BASE }}/v${{ inputs.version }} s3://${{ secrets.S3_APP_PRODUCTION }}
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CF_APP_PRODUCTION }} --paths "/*"
