name: Publish Docs

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      solution:
        required: false
        type: string

jobs:

  publish-docs:
    name: Publish Docs
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    steps:

      - name: Read Metadata
        run: |
          echo "Version: ${{ inputs.version }}"
          echo "Solution: ${{ inputs.solution }}"

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Add GitHub Packages as a NuGet source
        run: >
          dotnet nuget add source
          --username StudioLE
          --password ${{ secrets.GITHUB_TOKEN }}
          --store-password-in-clear-text
          --name github "https://nuget.pkg.github.com/StudioLE/index.json"

      - name: Build Solution
        run: >
          dotnet build "${{ inputs.solution }}"
          --configuration "Release"
          -p:Version="${{ inputs.version }}"
          -p:GenerateDocumentationFile=true
          -p:ProduceReferenceAssembly=true
          --nologo
          --verbosity minimal

      - name: Install DocFX
        run: |
          wget https://github.com/dotnet/docfx/releases/download/v2.59.3/docfx.zip
          unzip docfx.zip -d bin
          chmod u+x ./bin/docfx.exe

      - name: Run DocFX
        run: mono ./bin/docfx.exe docfx/docfx.json

      - name: Upload Docs Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Docs
          path: docfx/public
        if: ${{ always() }}

      - name: Deploy Docs to Staging
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          aws s3 rm --only-show-errors --recursive s3://${{ secrets.S3_DOCS_STAGING }}
          aws s3 cp --only-show-errors --recursive docfx/public s3://${{ secrets.S3_DOCS_STAGING }}
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CF_DOCS_STAGING }} --paths "/*"

      - name: Deploy Docs to Production
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          aws s3 rm --only-show-errors --recursive s3://${{ secrets.S3_DOCS_PRODUCTION }}
          aws s3 cp --only-show-errors --recursive s3://${{ secrets.S3_DOCS_STAGING }} s3://${{ secrets.S3_DOCS_PRODUCTION }}
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CF_DOCS_PRODUCTION }} --paths "/*"
