@inherits ViewerComponentBase

@if (Container.Errors.Any())
{
  <article class="message is-danger">
    <div class="message-body">
      @foreach (string error in Container.Errors)
      {
        <p>@error</p>
      }
    </div>
  </article>
}

@switch (Type)
{
  case ViewerType.Three:
    <figure class="card-image" id="model-@ComponentId"></figure>
    break;
  case ViewerType.Image:
    <figure class="card-image">
      <img src="@Container.Info.Location" alt="@Container.Info.Name"/>
    </figure>
    break;
  case ViewerType.Object:
    <figure class="card-image">
      <object type="@Container.ContentType" data="@Container.Info.Location"></object>
    </figure>
    break;
  case ViewerType.Text:
    <div class="card-content">
      @Text
    </div>
    break;
  case ViewerType.Table:
  {
    <div class="card-content is-scrollable">
      <table class="table is-fullwidth is-hoverable is-striped">
        @{
          IReadOnlyCollection<IReadOnlyCollection<string>> table = Table;
        }
        <thead>
        <tr>
          @foreach (string field in table.FirstOrDefault() ?? Array.Empty<string>())
          {
            <th>@field</th>
          }
        </tr>
        </thead>
        <tbody>
        @foreach (IReadOnlyCollection<string> row in table.Skip(1))
        {
          <tr>
            @foreach (string field in row)
            {
              <td>@field</td>
            }
          </tr>
        }
        </tbody>
      </table>
    </div>
    break;
  }
  case ViewerType.Json:
    <div class="card-image is-scrollable">
      <code>
        <pre>@Text</pre>
      </code>
    </div>
    break;
  default:
    <div class="card-content">
      <a class="button" href="@Container.Info.Location">@Container.Info.Location?.Segments.Last()</a>
    </div>
    break;
}

<footer class="card-footer">
  <p class="card-footer-item">
    @Title
  </p>
</footer>
